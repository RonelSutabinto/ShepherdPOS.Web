@page "/Pos"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Pos</PageTitle>

<h1>Pos</h1>
<p> <button @onclick="Start" class="btn btn-success">New Pos</button></p>

@if (salesView == null)
{
    <LoadMessenger />
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Timestamp</th>
                <th>Quantity</th>
                <th>Tax</th>
                <th>Total</th>
                <th>Discount</th>
                <th>Due</th>
                <th>Paid</th>
                <th>Outstanding</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var salesV in salesView)
            {
                <tr>
                    <td>@salesV.Timestamp</td>
                    <td>@salesV.Quantity</td>
                    <td>@salesV.Tax</td>
                    <td>@salesV.Total</td>
                    <td>@salesV.Discount</td>
                    <td>@salesV.Due</td>
                    <td>@salesV.Paid</td>
                    <td>@salesV.Balance</td>
                    <td>
                        <button @onclick="() => GetDetails(salesV.Id)" class="btn btn-info">Details</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private SalesMasterView[]? salesView;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await GetSale();
        }
        catch (Exception)
        {
        }
    }

    private async Task GetSale() => salesView = await Http.GetFromJsonAsync<SalesMasterView[]>("api/Pos");
    private void GetDetails(int id) => NavigationManager.NavigateTo($"Pos/{id}");
    private void Start() => NavigationManager.NavigateTo("PosStart");
}




@*=========================================
    =========================================
    =========================================*@





@*@page "/Pos"*@
@*@inherits ProductsBase*@
@*@inject ISnackbar Snackbar*@
@*@inject NavigationManager navigation*@
@*@using System.Threading;*@
<!--
<PageTitle>Pos</PageTitle>



<div class="content">
    <div class="body-content px-3 py-3">
        <div class="tab-content" id="pills-tabContent">
            <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
                <div class="row">
                    <div class="col-sm-12 col-md-6">
                        <div class="row">-->
@*========Group of Item Selection=============*@
<!--<div class="col-sm-3 col-md-12 col-lg-12 col-xl-2">
    <div class="btn-check-group mb-2">

        @if (ProductCategoryDtos == null && ErrorMessage == null)
        {
            <DisplaySpinner />
        }
        else
        {
            @foreach (var productCategory in ProductCategoryDtos)
            {
                var link = "/ProductsByCategory/" + productCategory.Id;

                <div class="position-relative mb-1 mb-sm-2 mb-md-1 mb-xl-2 d-inline-block d-sm-block d-md-inline-block d-xl-block">

                    <label class="btn btn-success btn-sm btn-block font-weight-600 mb-0">
                        <a style="cursor:pointer" @onclick="()=>getByCategory(productCategory.Id)">
                            @productCategory.Name
                        </a>
                    </label>
                </div>
            }
        }

    </div>
</div>-->
@*========================================*@

<!--<div class="col-sm-9 col-md-12 col-lg-12 col-xl-10 " id="style-3">-->
@*=========Item filtering section===============================*@
<!--<div class="row search-bar">
    <div class="col-6 mb-3">

    </div>
    <div class="col-6 mb-3">-->
@*<input type="text" class="form-control" @bind="strBarcode" placeholder="Barcode or QR-code scan here" @onkeyup="OnChangeBarcode" @bind:event="oninput">*@
<!--<input type="text" class="form-control" placeholder="Barcode or QR-code scan here" @bind:event="oninput">
    </div>
</div>-->
@*===================================*@
<!--<div class="product-grid ps ps--active-x ps--active-y">
    <div class="row row-m-3" id="product_search">
        @if (Products == null && ErrorMessage == null)
        {
            <DisplaySpinner />

        }
        else
        {

            var productCount = Products.Count();

            @if (productCount > 0)
            {
                @foreach (var prodGroup in GetGroupedProductsByCategory())
                {
                    <div class="row">
                        <DisplayProducts Products="@prodGroup.Take(3)"></DisplayProducts>
                    </div>
                    <hr class="mb-3" />
                }

            }

        }
    </div>
</div>-->
@*========================================*@

<!--</div>




                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    public void getByCategory(int Id)
    {
        GetProductCollectionByCategoryId(Id);
        StateHasChanged();
        base.OnInitialized();
    }

    //Product by category
    private async Task<IEnumerable<ProductDto>> GetProductCollectionByCategoryId(int categoryId)
    {
        var Products = await ManageProductsLocalStorageService.GetCollection();

        if (Products != null)
        {
            return Products.Where(p => p.CategoryId == categoryId);
        }
        else
        {
            return await ProductService.GetItemsByCategory(categoryId);
        }
    }



}-->
